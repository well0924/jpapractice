plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'co.kr.board'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "14"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//data jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	//thyemleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'

	//aop
	implementation 'org.springframework:spring-aop'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//fileupload
	implementation 'commons-io:commons-io:2.6'

	//bootstrap,jquery,fontawesome
	implementation 'org.webjars.bower:jquery:3.6.0'
    implementation 'org.webjars:jquery-form:4.2.2'
    implementation 'org.webjars:font-awesome:5.15.3'
    implementation 'org.webjars:bootstrap:4.6.0'

	//jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.4'

	//jwt
	//implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation('io.jsonwebtoken:jjwt-root:0.11.5')
	implementation('io.jsonwebtoken:jjwt-impl:0.11.5')
	implementation('io.jsonwebtoken:jjwt-jackson:0.11.5')
	//jwt 라이브러리
	implementation group: 'com.auth0', name: 'java-jwt', version: '3.10.2'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'it.ozimov:embedded-redis:0.7.2'

	//querydsl
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	//mailsender
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.2.6.RELEASE'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

	compileOnly 'org.projectlombok:lombok'
	//redis 캐시 사용중에 에러로 인해서 devtools 끔.
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

tasks.named('test') {
	useJUnitPlatform()
}

targetCompatibility = JavaVersion.VERSION_14
